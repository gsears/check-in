name: PHP Composer / Continuous Integration

# Trigger CI on push and PR to master
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:11
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: checkin
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        # Map tcp port 5432 on service container to the host
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v2

    # Cache Composer packages for future builds
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        # link to composer.lock
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install php dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest

    # Cache Node modules for future builds
    - name: Cache Node modules
      id: node-cache
      uses: actions/cache@v2
      with:
        path: node_modules
        # link to yarn.lock
        key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install node dependencies
      if: steps.node-cache.outputs.cache-hit != 'true'
      run: yarn install

    - name: Build frontend
      run: yarn encore production --progress

    - name: Reset db
      run: make db/reset

    - name: Create fixtures
      run: make fixtures/test

    - name: Run test suite
      run: make test/all
